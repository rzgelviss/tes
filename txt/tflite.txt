安装bazel (msys2安装patch)
安装protoc
slim/nets 移动到object_detection目录
D:\PythonProject\tf_lite\tensorflow\models\research>D:\Anaconda3\Lib\site-packages\tensorflow\bin\protoc object_detection/protos/*.proto --python_out=.

重装msys2
pacman -S zip unzip patch diffutils git

cd tensorflow/   
 
bazel build tensorflow/python/tools:freeze_graph
 
bazel build tensorflow/contrib/lite/toco:toco

BAZEL_VC   D:\Microsoft Visual Studio\2017\Community\VC 
删除tensorflow bazel缓存
重启cmd
bazel clean


cd /xxx/tensorflow/models/research/
 
export PYTHONPATH=$PYTHONPATH:`pwd`:`pwd`/slim


export PATH="$PATH:$HOME/bin"

C++ compilation of rule '//tensorflow/core:op_gen_lib' failed (Exit 2)
bazel build -c opt --copt = -msse4.1 --copt = -msse4.2 tensorflow / python / tools：freeze_graph


tensorflow目录运行 ./configure
  /home/rzg/tf_lite/tensorflow/models/research,/usr/local/lib/python3.6/dist-packages,/home/rzg/tf_lite/tensorflow/models/research/slim,/usr/lib/python3/dist-packages

bazel run --config=opt tensorflow/lite/toco:toco --input_file=./models/research/object_detection/pb_model/tflite_graph.pb --output_file=./models/research/object_detection/pb_model/detect1.tflite --input_shapes=1,300,300,3 --input_arrays=normalized_input_image_tensor --output_arrays='TFLite_Detection_PostProcess','TFLite_Detection_PostProcess:1','TFLite_Detection_PostProcess:2',TFLite_Detction_PostProcess:3' --inferece_type=FLOAT --allow_custom_ops

bazel run tensorflow/lite/toco:toco -- \
--input_file=/home/rzg/tf_lite/tensorflow/models/research/object_detection/pb_model/tflite_graph.pb \
--output_file=/home/rzg/tf_lite/tensorflow/models/research/object_detection/pb_model/detect1.tflite \
--input_shapes=1,300,300,3 \
--input_arrays=normalized_input_image_tensor \
--output_arrays='TFLite_Detection_PostProcess','TFLite_Detection_PostProcess:1','TFLite_Detection_PostProcess:2','TFLite_Detection_PostProcess:3' \
--inference_type=FLOAT \
--allow_custom_ops



https://blog.csdn.net/qq_26535271/article/details/83031412
https://blog.csdn.net/csdn_6105/article/details/82933628
1.训练
D:\PythonProject\tf_lite\tensorflow\models\research\object_detection\legacy\train.py
模型保存路径../training
2.转换pb
将ckpt,pipeline.config拷贝到pb_model 
D:\PythonProject\tf_lite\tensorflow\models\research\object_detection\export_tflite_ssd_graph.py
将生成的tflite_graph.pb pipeline.config拷贝到vmware pb_model
3.生成tflite
bazel run tensorflow/lite/toco:toco -- \
--input_file=/home/rzg/tf_lite/tensorflow/models/research/object_detection/pb_model/tflite_graph.pb \
--output_file=/home/rzg/tf_lite/tensorflow/models/research/object_detection/pb_model/detect1.tflite \
--input_shapes=1,300,300,3 \
--input_arrays=normalized_input_image_tensor \
--output_arrays='TFLite_Detection_PostProcess','TFLite_Detection_PostProcess:1','TFLite_Detection_PostProcess:2','TFLite_Detection_PostProcess:3' \
--inference_type=FLOAT \
--allow_custom_ops
4.生成apk
将detect.tflite放到Android工程下的
D:\PythonProject\tf_lite\examples-master\examples-master\lite\examples\object_detection
\android\app\src\main\assets目录
build
run
android/app/Tasks/instalDebug
D:\PythonProject\tf_lite\examples-master\examples-master\lite\examples
\object_detection\android\app\build\outputs\apk\debug目录
生成app-debug.apk 
5.手机安装app-debug.apk



